package com.kh.chap04_field.medel.vo;

public class FieldTest1 {
	/*
	 * 변수구분
	 *  - 전역변수 : 클래스 영역에 바로 선언하는 변수 => 클래스 내에서라면 어디서든 사용 가능
	 *  - 지역변수 : 클래스 영역 내에서 특정 구역 ({})에서만 사용 가능한 변수 (선언한 지역에서만 사용 가능)
	 *  		   메소드, if, for 등등
	 * 
	 * 1. 전역변수(2가지로 구분)
	 *  1) 필드 == 인스턴스 변수 == 멤버변수
	 *  	생성시점 : new 연산자를 통해 객체가 생성되는 순간, 메모리 영역(heap)에 할당됨.
	 *  	소멸시점 : 객체가 소멸할 때 함께 소멸
	 *  
	 *  2) 클래스 변수 == static 변수 : static 예약어를 붙이느냐 안붙이느냐에 따라 
	 *  						    static 변수냐, 필드냐로 구분이 됨.
	 *   
	 *   	생성시점 : 프로그램 실행과 동시(객체생성이 안되더라도)에 메모리 영역(static) 할당됨
	 *   	소멸시점 : 프로그램 종료될 때 소멸
	 * 
	 * 2. 지역변수 
	 *    생성시점 : 특정 구역({})이 실행될 때 메모리 영역(stack)에 할당(ex) 메소드 실행 시)
	 *    소멸시점 : 특정 구역({})이 종료될 때 소멸(ex) 메소드 종료 시)	
	 * 
	 */
	
	private int global;
	
	public void test(int num) {
		//매개변수 == 지역변수
		
		//지역변수(메소드 영역 내에서 생성한 변수) => 지역변수에는 접근 제한자가 없음
		//지역변수는 값을 항상 초기화 해줘야 함.
		int local = 0;
		
		if(true) {
			int a = 0;
		}
		//중괄호 지역을 벗어나서 변수 소멸
//		System.out.println(a);
		
		System.out.println(local);	//초기화 시켜줘야 출력 가능
		
		//필드 초기화는 jvm이 객체 생성 시 heap 메모리 공간에 값을 할당할 때
		//자동으로 초기화 시켜주기 때문에 문제 없음.
		System.out.println(global);
		
		System.out.println(num);
		//메소드 호출 시 반드시 값을 넘겨줘야 실행이 가능하기 때문(즉 항상 값이 들어가 있음.)
	}
	
	
}





















